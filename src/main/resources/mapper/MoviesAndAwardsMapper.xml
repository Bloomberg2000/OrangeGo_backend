<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dbcourse.curriculum_design.mapper.MoviesAndAwardsMapper">
  <resultMap id="BaseResultMap" type="com.dbcourse.curriculum_design.model.MoviesAndAwards">
    <!--@mbg.generated-->
    <!--@Table dbo.MoviesAndAwards-->
    <result column="AwardID" jdbcType="INTEGER" property="awardid" />
    <result column="MoiveId" jdbcType="INTEGER" property="moiveid" />
    <result column="MoiveName" jdbcType="VARCHAR" property="moivename" />
    <result column="MovieScore" jdbcType="REAL" property="moviescore" />
    <result column="MoiveCover" jdbcType="VARCHAR" property="moivecover" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    AwardID, MoiveId, MoiveName, MovieScore, MoiveCover
  </sql>
  <select id="selectByExample" parameterType="com.dbcourse.curriculum_design.model.MoviesAndAwardsExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dbo.MoviesAndAwards
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.dbcourse.curriculum_design.model.MoviesAndAwardsExample">
    <!--@mbg.generated-->
    delete from dbo.MoviesAndAwards
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dbcourse.curriculum_design.model.MoviesAndAwards">
    <!--@mbg.generated-->
    insert into dbo.MoviesAndAwards (AwardID, MoiveId, MoiveName, 
      MovieScore, MoiveCover)
    values (#{awardid,jdbcType=INTEGER}, #{moiveid,jdbcType=INTEGER}, #{moivename,jdbcType=VARCHAR}, 
      #{moviescore,jdbcType=REAL}, #{moivecover,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dbcourse.curriculum_design.model.MoviesAndAwards">
    <!--@mbg.generated-->
    insert into dbo.MoviesAndAwards
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="awardid != null">
        AwardID,
      </if>
      <if test="moiveid != null">
        MoiveId,
      </if>
      <if test="moivename != null">
        MoiveName,
      </if>
      <if test="moviescore != null">
        MovieScore,
      </if>
      <if test="moivecover != null">
        MoiveCover,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="awardid != null">
        #{awardid,jdbcType=INTEGER},
      </if>
      <if test="moiveid != null">
        #{moiveid,jdbcType=INTEGER},
      </if>
      <if test="moivename != null">
        #{moivename,jdbcType=VARCHAR},
      </if>
      <if test="moviescore != null">
        #{moviescore,jdbcType=REAL},
      </if>
      <if test="moivecover != null">
        #{moivecover,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dbcourse.curriculum_design.model.MoviesAndAwardsExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from dbo.MoviesAndAwards
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update dbo.MoviesAndAwards
    <set>
      <if test="record.awardid != null">
        AwardID = #{record.awardid,jdbcType=INTEGER},
      </if>
      <if test="record.moiveid != null">
        MoiveId = #{record.moiveid,jdbcType=INTEGER},
      </if>
      <if test="record.moivename != null">
        MoiveName = #{record.moivename,jdbcType=VARCHAR},
      </if>
      <if test="record.moviescore != null">
        MovieScore = #{record.moviescore,jdbcType=REAL},
      </if>
      <if test="record.moivecover != null">
        MoiveCover = #{record.moivecover,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update dbo.MoviesAndAwards
    set AwardID = #{record.awardid,jdbcType=INTEGER},
      MoiveId = #{record.moiveid,jdbcType=INTEGER},
      MoiveName = #{record.moivename,jdbcType=VARCHAR},
      MovieScore = #{record.moviescore,jdbcType=REAL},
      MoiveCover = #{record.moivecover,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into dbo.MoviesAndAwards
    (AwardID, MoiveId, MoiveName, MovieScore, MoiveCover)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.awardid,jdbcType=INTEGER}, #{item.moiveid,jdbcType=INTEGER}, #{item.moivename,jdbcType=VARCHAR}, 
        #{item.moviescore,jdbcType=REAL}, #{item.moivecover,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>