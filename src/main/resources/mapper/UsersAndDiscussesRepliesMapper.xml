<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dbcourse.curriculum_design.mapper.UsersAndDiscussesRepliesMapper">
  <resultMap id="BaseResultMap" type="com.dbcourse.curriculum_design.model.UsersAndDiscussesReplies">
    <!--@mbg.generated-->
    <!--@Table dbo.UsersAndDiscussesReplies-->
    <result column="DiscussesRepliesId" jdbcType="INTEGER" property="discussesrepliesid" />
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="DiscussesId" jdbcType="INTEGER" property="discussesid" />
    <result column="DiscussesRepliesCreateTime" jdbcType="TIMESTAMP" property="discussesrepliescreatetime" />
    <result column="DiscussesRepliesEditTime" jdbcType="TIMESTAMP" property="discussesrepliesedittime" />
    <result column="DiscussesRepliesContent" jdbcType="VARCHAR" property="discussesrepliescontent" />
    <result column="DiscussesRepliesParentId" jdbcType="INTEGER" property="discussesrepliesparentid" />
    <result column="Username" jdbcType="VARCHAR" property="username" />
    <result column="UserGender" jdbcType="INTEGER" property="usergender" />
    <result column="UserAvatar" jdbcType="VARCHAR" property="useravatar" />
    <result column="DiscussesRepliesLikeNum" jdbcType="INTEGER" property="discussesreplieslikenum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    DiscussesRepliesId, UserId, DiscussesId, DiscussesRepliesCreateTime, DiscussesRepliesEditTime, 
    DiscussesRepliesContent, DiscussesRepliesParentId, Username, UserGender, UserAvatar, 
    DiscussesRepliesLikeNum
  </sql>
  <select id="selectByExample" parameterType="com.dbcourse.curriculum_design.model.UsersAndDiscussesRepliesExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dbo.UsersAndDiscussesReplies
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.dbcourse.curriculum_design.model.UsersAndDiscussesRepliesExample">
    <!--@mbg.generated-->
    delete from dbo.UsersAndDiscussesReplies
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dbcourse.curriculum_design.model.UsersAndDiscussesReplies">
    <!--@mbg.generated-->
    insert into dbo.UsersAndDiscussesReplies (DiscussesRepliesId, UserId, DiscussesId, 
      DiscussesRepliesCreateTime, DiscussesRepliesEditTime, 
      DiscussesRepliesContent, DiscussesRepliesParentId, 
      Username, UserGender, UserAvatar, 
      DiscussesRepliesLikeNum)
    values (#{discussesrepliesid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{discussesid,jdbcType=INTEGER}, 
      #{discussesrepliescreatetime,jdbcType=TIMESTAMP}, #{discussesrepliesedittime,jdbcType=TIMESTAMP}, 
      #{discussesrepliescontent,jdbcType=VARCHAR}, #{discussesrepliesparentid,jdbcType=INTEGER}, 
      #{username,jdbcType=VARCHAR}, #{usergender,jdbcType=INTEGER}, #{useravatar,jdbcType=VARCHAR}, 
      #{discussesreplieslikenum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dbcourse.curriculum_design.model.UsersAndDiscussesReplies">
    <!--@mbg.generated-->
    insert into dbo.UsersAndDiscussesReplies
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="discussesrepliesid != null">
        DiscussesRepliesId,
      </if>
      <if test="userid != null">
        UserId,
      </if>
      <if test="discussesid != null">
        DiscussesId,
      </if>
      <if test="discussesrepliescreatetime != null">
        DiscussesRepliesCreateTime,
      </if>
      <if test="discussesrepliesedittime != null">
        DiscussesRepliesEditTime,
      </if>
      <if test="discussesrepliescontent != null">
        DiscussesRepliesContent,
      </if>
      <if test="discussesrepliesparentid != null">
        DiscussesRepliesParentId,
      </if>
      <if test="username != null">
        Username,
      </if>
      <if test="usergender != null">
        UserGender,
      </if>
      <if test="useravatar != null">
        UserAvatar,
      </if>
      <if test="discussesreplieslikenum != null">
        DiscussesRepliesLikeNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="discussesrepliesid != null">
        #{discussesrepliesid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="discussesid != null">
        #{discussesid,jdbcType=INTEGER},
      </if>
      <if test="discussesrepliescreatetime != null">
        #{discussesrepliescreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="discussesrepliesedittime != null">
        #{discussesrepliesedittime,jdbcType=TIMESTAMP},
      </if>
      <if test="discussesrepliescontent != null">
        #{discussesrepliescontent,jdbcType=VARCHAR},
      </if>
      <if test="discussesrepliesparentid != null">
        #{discussesrepliesparentid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="usergender != null">
        #{usergender,jdbcType=INTEGER},
      </if>
      <if test="useravatar != null">
        #{useravatar,jdbcType=VARCHAR},
      </if>
      <if test="discussesreplieslikenum != null">
        #{discussesreplieslikenum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dbcourse.curriculum_design.model.UsersAndDiscussesRepliesExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from dbo.UsersAndDiscussesReplies
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update dbo.UsersAndDiscussesReplies
    <set>
      <if test="record.discussesrepliesid != null">
        DiscussesRepliesId = #{record.discussesrepliesid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.discussesid != null">
        DiscussesId = #{record.discussesid,jdbcType=INTEGER},
      </if>
      <if test="record.discussesrepliescreatetime != null">
        DiscussesRepliesCreateTime = #{record.discussesrepliescreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.discussesrepliesedittime != null">
        DiscussesRepliesEditTime = #{record.discussesrepliesedittime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.discussesrepliescontent != null">
        DiscussesRepliesContent = #{record.discussesrepliescontent,jdbcType=VARCHAR},
      </if>
      <if test="record.discussesrepliesparentid != null">
        DiscussesRepliesParentId = #{record.discussesrepliesparentid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        Username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.usergender != null">
        UserGender = #{record.usergender,jdbcType=INTEGER},
      </if>
      <if test="record.useravatar != null">
        UserAvatar = #{record.useravatar,jdbcType=VARCHAR},
      </if>
      <if test="record.discussesreplieslikenum != null">
        DiscussesRepliesLikeNum = #{record.discussesreplieslikenum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update dbo.UsersAndDiscussesReplies
    set DiscussesRepliesId = #{record.discussesrepliesid,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=INTEGER},
      DiscussesId = #{record.discussesid,jdbcType=INTEGER},
      DiscussesRepliesCreateTime = #{record.discussesrepliescreatetime,jdbcType=TIMESTAMP},
      DiscussesRepliesEditTime = #{record.discussesrepliesedittime,jdbcType=TIMESTAMP},
      DiscussesRepliesContent = #{record.discussesrepliescontent,jdbcType=VARCHAR},
      DiscussesRepliesParentId = #{record.discussesrepliesparentid,jdbcType=INTEGER},
      Username = #{record.username,jdbcType=VARCHAR},
      UserGender = #{record.usergender,jdbcType=INTEGER},
      UserAvatar = #{record.useravatar,jdbcType=VARCHAR},
      DiscussesRepliesLikeNum = #{record.discussesreplieslikenum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into dbo.UsersAndDiscussesReplies
    (DiscussesRepliesId, UserId, DiscussesId, DiscussesRepliesCreateTime, DiscussesRepliesEditTime, 
      DiscussesRepliesContent, DiscussesRepliesParentId, Username, UserGender, UserAvatar, 
      DiscussesRepliesLikeNum)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.discussesrepliesid,jdbcType=INTEGER}, #{item.userid,jdbcType=INTEGER}, #{item.discussesid,jdbcType=INTEGER}, 
        #{item.discussesrepliescreatetime,jdbcType=TIMESTAMP}, #{item.discussesrepliesedittime,jdbcType=TIMESTAMP}, 
        #{item.discussesrepliescontent,jdbcType=VARCHAR}, #{item.discussesrepliesparentid,jdbcType=INTEGER}, 
        #{item.username,jdbcType=VARCHAR}, #{item.usergender,jdbcType=INTEGER}, #{item.useravatar,jdbcType=VARCHAR}, 
        #{item.discussesreplieslikenum,jdbcType=INTEGER})
    </foreach>
  </insert>
</mapper>