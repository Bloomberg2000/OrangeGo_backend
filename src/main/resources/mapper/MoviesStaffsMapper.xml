<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dbcourse.curriculum_design.mapper.MoviesStaffsMapper">
  <resultMap id="BaseResultMap" type="com.dbcourse.curriculum_design.model.MoviesStaffs">
    <!--@mbg.generated-->
    <!--@Table MoviesStaffs-->
    <id column="n_id" jdbcType="INTEGER" property="nId" />
    <result column="n_movie_id" jdbcType="INTEGER" property="nMovieId" />
    <result column="n_staff_id" jdbcType="INTEGER" property="nStaffId" />
    <result column="n_type" jdbcType="INTEGER" property="nType" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    n_id, n_movie_id, n_staff_id, n_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from MoviesStaffs
    where n_id = #{nId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from MoviesStaffs
    where n_id = #{nId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dbcourse.curriculum_design.model.MoviesStaffs">
    <!--@mbg.generated-->
    insert into MoviesStaffs (n_id, n_movie_id, n_staff_id, 
      n_type)
    values (#{nId,jdbcType=INTEGER}, #{nMovieId,jdbcType=INTEGER}, #{nStaffId,jdbcType=INTEGER}, 
      #{nType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dbcourse.curriculum_design.model.MoviesStaffs">
    <!--@mbg.generated-->
    insert into MoviesStaffs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nId != null">
        n_id,
      </if>
      <if test="nMovieId != null">
        n_movie_id,
      </if>
      <if test="nStaffId != null">
        n_staff_id,
      </if>
      <if test="nType != null">
        n_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nId != null">
        #{nId,jdbcType=INTEGER},
      </if>
      <if test="nMovieId != null">
        #{nMovieId,jdbcType=INTEGER},
      </if>
      <if test="nStaffId != null">
        #{nStaffId,jdbcType=INTEGER},
      </if>
      <if test="nType != null">
        #{nType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dbcourse.curriculum_design.model.MoviesStaffs">
    <!--@mbg.generated-->
    update MoviesStaffs
    <set>
      <if test="nMovieId != null">
        n_movie_id = #{nMovieId,jdbcType=INTEGER},
      </if>
      <if test="nStaffId != null">
        n_staff_id = #{nStaffId,jdbcType=INTEGER},
      </if>
      <if test="nType != null">
        n_type = #{nType,jdbcType=INTEGER},
      </if>
    </set>
    where n_id = #{nId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dbcourse.curriculum_design.model.MoviesStaffs">
    <!--@mbg.generated-->
    update MoviesStaffs
    set n_movie_id = #{nMovieId,jdbcType=INTEGER},
      n_staff_id = #{nStaffId,jdbcType=INTEGER},
      n_type = #{nType,jdbcType=INTEGER}
    where n_id = #{nId,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into MoviesStaffs
    (n_id, n_movie_id, n_staff_id, n_type)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.nId,jdbcType=INTEGER}, #{item.nMovieId,jdbcType=INTEGER}, #{item.nStaffId,jdbcType=INTEGER}, 
        #{item.nType,jdbcType=INTEGER})
    </foreach>
  </insert>
</mapper>